@model CardRegistration.MVC.ViewModels.CardRegistrationViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "cardRegistrationForm" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CardRegistrationViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExpiryDateMonthAndYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(model => model.ExpiryDateMonth, new SelectList(Model.Months, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Months" })
            @Html.ValidationMessageFor(model => model.ExpiryDateMonth, "", new { @class = "text-danger" })
            /
            @Html.DropDownListFor(model => model.ExpiryDateYear, new SelectList(Model.Years, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Months" })
            @Html.ValidationMessageFor(model => model.ExpiryDateYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" id="btnTestValidate" onclick="btnTestValidateClick()" class="btn btn-default">validate</button>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $(document).ready(function () {
        console.log('on ready');        
    });

    function btnTestValidateClick() {
        console.log('test');
        var form = $('#cardRegistrationForm');
        $.ajax({
            cache: false,
            async: true,
            type: "POST",
            url: "@Url.Action("AddUpdateData", "CardRegistration")",
            data:  form.serialize(),
            success: function (data) {
                var isSuccessful = (data['success']);
                if (isSuccessful) {
                    console.log(data['view']);
                    initializePage();
                }
                else {
                    var errors = data['errors'];
                    displayValidationErrors(errors);
                }
            }
        });
    }            

    function displayValidationErrors(errors)
    {
        console.log('in displayValidationErrors');
        var $ul = $('div.validation-summary-valid.text-danger > ul');

        $ul.empty();
        $.each(errors, function (idx, errorMessage) {
            console.log('error message: ' + errorMessage);
            $ul.append('<li>' + errorMessage + '</li>');
        });
    }
    </script>
}
