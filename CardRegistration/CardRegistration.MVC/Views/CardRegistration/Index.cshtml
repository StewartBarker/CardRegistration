@model CardRegistration.MVC.ViewModels.CardRegistrationViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Card Registration</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "cardRegistrationForm" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExpiryDateMonthAndYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row col-md-7">
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ExpiryDateMonth, new SelectList(Model.Months, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Months" })
            </div>
            <div class="col-md-1 control-label">/</div>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ExpiryDateYear, new SelectList(Model.Years, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Years" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                @Html.HiddenFor(model => model.ExpiryDateMonthAndYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiryDateMonthAndYear, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Confirm" class="btn btn-default" disabled="disabled" id="btnConfirm" />
        </div>
    </div>

    <div id="popup" class="modal fade" role="dialog" hidden="hidden">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">The card has been successfuly registered!</h4>
                </div>
                <div class="modal-body">
                    <div>Card Number: <b>@Model.CardNumber</b></div>
                    <div>Expiry Date: <b>@Model.ExpiryDateMonth / @Model.ExpiryDateYear</b></div>
                    <div>Address Line 1: <b>@Model.AddressLine1</b></div>
                    <div>Post Code: <b>@Model.PostCode</b></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="modalOk" data-dismiss="modal" onclick="modalOnClick()">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Allow validation of hidden field..
        $.validator.setDefaults({
            ignore: ""
        });
        $('#Months').change(function () {
            updateMonthAndYear();
        });

        $('#Years').change(function () {
            updateMonthAndYear();
        });

        function updateMonthAndYear() {
            console.log($('#Months').val());
            var month = $('#Months').val();
            var formattedMonth = ("0" + month).slice(-2);
            console.log(formattedMonth);
            var year = $('#Years').val();
            $('#ExpiryDateMonthAndYear').val("01/" + month + "/" + year + " 00:00:00");
            console.log('Month and year: ' + $('#ExpiryDateMonthAndYear').val());
            $('form').data('validator').element('#ExpiryDateMonthAndYear'); // trigger validation on hidden item whenever month/year changes           
        }

        // perform validation check (to enable/disable Confirm button at each field change)
        $('#CardNumber').change(function () {
            ValidateCheck();
        });
        $('#Name').change(function () {
            ValidateCheck();
        });
        $('#Months').change(function () {
            ValidateCheck();
         });
        $('#Years').change(function () {
            ValidateCheck();
        });
        $('#AddressLine1').change(function () {
            ValidateCheck();
        });
        $('#PostCode').change(function () {
            ValidateCheck();
        });        

        function ValidateCheck() {        
            var form = $('#cardRegistrationForm');
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "@Url.Action("IsModelStateValidAjax", "CardRegistration")",
                data:  form.serialize(),
                success: function (data) {
                    var isSuccessful = (data['success']);
                    if (isSuccessful) {
                        console.log('success');
                        $('#btnConfirm').removeAttr('disabled');
                    }
                    else {
                        $('#btnConfirm').attr('disabled', true);
                    }
                }
            });            
        } 

    function modalOnClick() {
        $('#popup').modal('hide');
        window.location.href = '@Url.Action("Index", "CardRegistration")';
    }

        $(document).ready(function () {            
            if ("@ViewBag.Success" == "True") {          
                $('#CardNumber').val('@Model.CardNumber');
                $('#popup').modal('show');
                }
            else {
                   $('#popup').modal('hide');
                }
        });
    </script>
}
